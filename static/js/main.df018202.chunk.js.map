{"version":3,"sources":["TypingTestComponent.js","wordlist.js","testlist.js","TypingTestContainer.js","LeaderboardComponent.js","LeaderboardContainer.js","App.js","index.js"],"names":["TypingTestComponent","words","points","attempts","accuracy","wpm","countdown","typedWord","updateTypedWord","checkWord","resetTest","className","value","onChange","event","target","onClick","splitWords","split","testList","newTestList","i","n","Math","floor","random","push","String","toLowerCase","TypingTestContainer","hiscores","updateHiscores","useState","getNewWords","adjustAttempts","adjustPoints","isTestRunning","toggleTestRunning","isTestComplete","toggleTestComplete","setCountdown","duration","clearTimer","clearInterval","window","cdc","runTest","setInterval","setTimeout","checkHiscores","score","position","newHiscores","splice","console","log","hiscoresToReturn","slice","useEffect","toFixed","isNaN","getAccuracy","word","charAt","length","LeaderboardComponent","LeaderboardContainer","App","localStorageHiscores","JSON","parse","localStorage","getItem","initialHiscores","setItem","stringify","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.df018202.chunk.js","sourcesContent":["import React from \"react\"\n\nfunction TypingTestComponent({ words, points, attempts, accuracy, wpm, countdown, typedWord, updateTypedWord, checkWord, resetTest }) {\n\n  function handleChange(event) {\n    let value = event.target.value\n    updateTypedWord(value)\n    checkWord(value)\n  }\n\n  return (\n    <div className=\"game-container\">\n      <div className=\"upcoming-words\">\n        <p className=\"word-to-type\">{words[attempts]}</p>\n        <p className=\"upcoming-word-1\">{words[attempts + 1]}</p>\n        <p className=\"upcoming-word-2\">{words[attempts + 2]}</p>\n        <p className=\"upcoming-word-3\">{words[attempts + 3]}</p>\n        <p className=\"upcoming-word-4\">{words[attempts + 4]}</p>\n      </div>\n      <input\n        value={typedWord}\n        onChange={handleChange}\n      />\n      <div className=\"controls-container\">\n        <div className=\"metrics-container\">\n          <span><p>{countdown}s</p><p className=\"unit-text\">Time remaining</p></span>\n          <span><p>{wpm}</p><p className=\"unit-text\">wpm</p></span>\n          <span><p>{points} / {attempts}</p><p className=\"unit-text\">Correct/Attempts</p></span>  {/* TODO: add scaling at end of each test*/}\n          <span><p>{accuracy}</p><p className=\"unit-text\">%</p></span>\n        </div>\n        <button\n          onClick={resetTest}>\n          Reset\n        </button>\n      </div>\n    </div>\n  )\n}\n\nexport default TypingTestComponent\n","let words =\n`a\nability\nable\nabout\nabove\naccept\naccording\naccount\nacross\nact\naction\nactivity\nactually\nadd\naddress\nadministration\nadmit\nadult\naffect\nafter\nagain\nagainst\nage\nagency\nagent\nago\nagree\nagreement\nahead\nair\nall\nallow\nalmost\nalone\nalong\nalready\nalso\nalthough\nalways\nAmerican\namong\namount\nanalysis\nand\nanimal\nanother\nanswer\nany\nanyone\nanything\nappear\napply\napproach\narea\nargue\narm\naround\narrive\nart\narticle\nartist\nas\nask\nassume\nat\nattack\nattention\nattorney\naudience\nauthor\nauthority\navailable\navoid\naway\nbaby\nback\nbad\nbag\nball\nbank\nbar\nbase\nbe\nbeat\nbeautiful\nbecause\nbecome\nbed\nbefore\nbegin\nbehavior\nbehind\nbelieve\nbenefit\nbest\nbetter\nbetween\nbeyond\nbig\nbill\nbillion\nbit\nblack\nblood\nblue\nboard\nbody\nbook\nborn\nboth\nbox\nboy\nbreak\nbring\nbrother\nbudget\nbuild\nbuilding\nbusiness\nbut\nbuy\nby\ncall\ncamera\ncampaign\ncan\ncancer\ncandidate\ncapital\ncar\ncard\ncare\ncareer\ncarry\ncase\ncatch\ncause\ncell\ncenter\ncentral\ncentury\ncertain\ncertainly\nchair\nchallenge\nchance\nchange\ncharacter\ncharge\ncheck\nchild\nchoice\nchoose\nchurch\ncitizen\ncity\ncivil\nclaim\nclass\nclear\nclearly\nclose\ncoach\ncold\ncollection\ncollege\ncolor\ncome\ncommercial\ncommon\ncommunity\ncompany\ncompare\ncomputer\nconcern\ncondition\nconference\nCongress\nconsider\nconsumer\ncontain\ncontinue\ncontrol\ncost\ncould\ncountry\ncouple\ncourse\ncourt\ncover\ncreate\ncrime\ncultural\nculture\ncup\ncurrent\ncustomer\ncut\ndark\ndata\ndaughter\nday\ndead\ndeal\ndeath\ndebate\ndecade\ndecide\ndecision\ndeep\ndefense\ndegree\nDemocrat\ndemocratic\ndescribe\ndesign\ndespite\ndetail\ndetermine\ndevelop\ndevelopment\ndie\ndifference\ndifferent\ndifficult\ndinner\ndirection\ndirector\ndiscover\ndiscuss\ndiscussion\ndisease\ndo\ndoctor\ndog\ndoor\ndown\ndraw\ndream\ndrive\ndrop\ndrug\nduring\neach\nearly\neast\neasy\neat\neconomic\neconomy\nedge\neducation\neffect\neffort\neight\neither\nelection\nelse\nemployee\nend\nenergy\nenjoy\nenough\nenter\nentire\nenvironment\nenvironmental\nespecially\nestablish\neven\nevening\nevent\never\nevery\neverybody\neveryone\neverything\nevidence\nexactly\nexample\nexecutive\nexist\nexpect\nexperience\nexpert\nexplain\neye\nface\nfact\nfactor\nfail\nfall\nfamily\nfar\nfast\nfather\nfear\nfederal\nfeel\nfeeling\nfew\nfield\nfight\nfigure\nfill\nfilm\nfinal\nfinally\nfinancial\nfind\nfine\nfinger\nfinish\nfire\nfirm\nfirst\nfish\nfive\nfloor\nfly\nfocus\nfollow\nfood\nfoot\nfor\nforce\nforeign\nforget\nform\nformer\nforward\nfour\nfree\nfriend\nfrom\nfront\nfull\nfund\nfuture\ngame\ngarden\ngas\ngeneral\ngeneration\nget\ngirl\ngive\nglass\ngo\ngoal\ngood\ngovernment\ngreat\ngreen\nground\ngroup\ngrow\ngrowth\nguess\ngun\nguy\nhair\nhalf\nhand\nhang\nhappen\nhappy\nhard\nhave\nhe\nhead\nhealth\nhear\nheart\nheat\nheavy\nhelp\nher\nhere\nherself\nhigh\nhim\nhimself\nhis\nhistory\nhit\nhold\nhome\nhope\nhospital\nhot\nhotel\nhour\nhouse\nhow\nhowever\nhuge\nhuman\nhundred\nhusband\nI\nidea\nidentify\nif\nimage\nimagine\nimpact\nimportant\nimprove\nin\ninclude\nincluding\nincrease\nindeed\nindicate\nindividual\nindustry\ninformation\ninside\ninstead\ninstitution\ninterest\ninteresting\ninternational\ninterview\ninto\ninvestment\ninvolve\nissue\nit\nitem\nits\nitself\njob\njoin\njust\nkeep\nkey\nkid\nkill\nkind\nkitchen\nknow\nknowledge\nland\nlanguage\nlarge\nlast\nlate\nlater\nlaugh\nlaw\nlawyer\nlay\nlead\nleader\nlearn\nleast\nleave\nleft\nleg\nlegal\nless\nlet\nletter\nlevel\nlie\nlife\nlight\nlike\nlikely\nline\nlist\nlisten\nlittle\nlive\nlocal\nlong\nlook\nlose\nloss\nlot\nlove\nlow\nmachine\nmagazine\nmain\nmaintain\nmajor\nmajority\nmake\nman\nmanage\nmanagement\nmanager\nmany\nmarket\nmarriage\nmaterial\nmatter\nmay\nmaybe\nme\nmean\nmeasure\nmedia\nmedical\nmeet\nmeeting\nmember\nmemory\nmention\nmessage\nmethod\nmiddle\nmight\nmilitary\nmillion\nmind\nminute\nmiss\nmission\nmodel\nmodern\nmoment\nmoney\nmonth\nmore\nmorning\nmost\nmother\nmouth\nmove\nmovement\nmovie\nMr\nMrs\nmuch\nmusic\nmust\nmy\nmyself\nname\nnation\nnational\nnatural\nnature\nnear\nnearly\nnecessary\nneed\nnetwork\nnever\nnew\nnews\nnewspaper\nnext\nnice\nnight\nno\nnone\nnor\nnorth\nnot\nnote\nnothing\nnotice\nnow\nnumber\noccur\nof\noff\noffer\noffice\nofficer\nofficial\noften\noh\noil\nok\nold\non\nonce\none\nonly\nonto\nopen\noperation\nopportunity\noption\nor\norder\norganization\nother\nothers\nour\nout\noutside\nover\nown\nowner\npage\npain\npainting\npaper\nparent\npart\nparticipant\nparticular\nparticularly\npartner\nparty\npass\npast\npatient\npattern\npay\npeace\npeople\nper\nperform\nperformance\nperhaps\nperiod\nperson\npersonal\nphone\nphysical\npick\npicture\npiece\nplace\nplan\nplant\nplay\nplayer\nPM\npoint\npolice\npolicy\npolitical\npolitics\npoor\npopular\npopulation\nposition\npositive\npossible\npower\npractice\nprepare\npresent\npresident\npressure\npretty\nprevent\nprice\nprivate\nprobably\nproblem\nprocess\nproduce\nproduct\nproduction\nprofessional\nprofessor\nprogram\nproject\nproperty\nprotect\nprove\nprovide\npublic\npull\npurpose\npush\nput\nquality\nquestion\nquickly\nquite\nrace\nradio\nraise\nrange\nrate\nrather\nreach\nread\nready\nreal\nreality\nrealize\nreally\nreason\nreceive\nrecent\nrecently\nrecognize\nrecord\nred\nreduce\nreflect\nregion\nrelate\nrelationship\nreligious\nremain\nremember\nremove\nreport\nrepresent\nRepublican\nrequire\nresearch\nresource\nrespond\nresponse\nresponsibility\nrest\nresult\nreturn\nreveal\nrich\nright\nrise\nrisk\nroad\nrock\nrole\nroom\nrule\nrun\nsafe\nsame\nsave\nsay\nscene\nschool\nscience\nscientist\nscore\nsea\nseason\nseat\nsecond\nsection\nsecurity\nsee\nseek\nseem\nsell\nsend\nsenior\nsense\nseries\nserious\nserve\nservice\nset\nseven\nseveral\nsex\nsexual\nshake\nshare\nshe\nshoot\nshort\nshot\nshould\nshoulder\nshow\nside\nsign\nsignificant\nsimilar\nsimple\nsimply\nsince\nsing\nsingle\nsister\nsit\nsite\nsituation\nsix\nsize\nskill\nskin\nsmall\nsmile\nso\nsocial\nsociety\nsoldier\nsome\nsomebody\nsomeone\nsomething\nsometimes\nson\nsong\nsoon\nsort\nsound\nsource\nsouth\nsouthern\nspace\nspeak\nspecial\nspecific\nspeech\nspend\nsport\nspring\nstaff\nstage\nstand\nstandard\nstar\nstart\nstate\nstatement\nstation\nstay\nstep\nstill\nstock\nstop\nstore\nstory\nstrategy\nstreet\nstrong\nstructure\nstudent\nstudy\nstuff\nstyle\nsubject\nsuccess\nsuccessful\nsuch\nsuddenly\nsuffer\nsuggest\nsummer\nsupport\nsure\nsurface\nsystem\ntable\ntake\ntalk\ntask\ntax\nteach\nteacher\nteam\ntechnology\ntelevision\ntell\nten\ntend\nterm\ntest\nthan\nthank\nthat\nthe\ntheir\nthem\nthemselves\nthen\ntheory\nthere\nthese\nthey\nthing\nthink\nthird\nthis\nthose\nthough\nthought\nthousand\nthreat\nthree\nthrough\nthroughout\nthrow\nthus\ntime\nto\ntoday\ntogether\ntonight\ntoo\ntop\ntotal\ntough\ntoward\ntown\ntrade\ntraditional\ntraining\ntravel\ntreat\ntreatment\ntree\ntrial\ntrip\ntrouble\ntrue\ntruth\ntry\nturn\nTV\ntwo\ntype\nunder\nunderstand\nunit\nuntil\nup\nupon\nus\nuse\nusually\nvalue\nvarious\nvery\nvictim\nview\nviolence\nvisit\nvoice\nvote\nwait\nwalk\nwall\nwant\nwar\nwatch\nwater\nway\nwe\nweapon\nwear\nweek\nweight\nwell\nwest\nwestern\nwhat\nwhatever\nwhen\nwhere\nwhether\nwhich\nwhile\nwhite\nwho\nwhole\nwhom\nwhose\nwhy\nwide\nwife\nwill\nwin\nwind\nwindow\nwish\nwith\nwithin\nwithout\nwoman\nwonder\nword\nwork\nworker\nworld\nworry\nwould\nwrite\nwriter\nwrong\nyard\nyeah\nyear\nyes\nyet\nyou\nyoung\nyour\nyourself`\n\nlet splitWords = words.split(/\\r?\\n/)\n\nexport default splitWords\n","import splitWords from \"./wordlist\"\n\nconst testList = () => {\n  const newTestList = []\n\n  for  (let i = 0; i < 500; i++) {\n    let n = Math.floor(Math.random()*1000)\n    newTestList.push( String(splitWords[n]).toLowerCase() ) // Import words, ensure they are string, and force toLowerCase\n  }\n  return newTestList\n}\n\nexport default testList\n","import React,  { useState, useEffect } from \"react\"\nimport TypingTestComponent from \"./TypingTestComponent\" //Presentational component\nimport testList from \"./testlist\" // Import randomised test list from a larger word list\n\nfunction TypingTestContainer({ hiscores, updateHiscores }) {\n// Initialise wordlist and scoring\n  let [words, getNewWords] = useState(testList())\n  let [attempts, adjustAttempts] = useState(0)\n  let [points, adjustPoints] = useState(0)\n\n  // TODO: add character tracking logic\n  //let [characters, charactersRight] = useState(0)\n\n// Initialise test timing variables\n  let [isTestRunning, toggleTestRunning] = useState(false)\n  let [isTestComplete, toggleTestComplete] = useState(true)\n  let [countdown, setCountdown] = useState(0)\n  let [duration, setDuration] = useState(60)\n\n// Typing goal word and attempt\n  let [typedWord, updateTypedWord] = useState(\"\")\n\n// Check entered word for correctness if the last character entered was a space/whitespace\n  const checkWord = (word) => {\n\n    if (isTestRunning && !isTestComplete) {\n      if ( word.charAt(word.length - 1) === \" \" ) {\n        let trimmedWord = word.slice(0, word.length - 1)\n        if (trimmedWord === words[attempts]) {\n          adjustPoints(points += 1)\n          window.points = points\n        }\n        adjustAttempts(attempts += 1)\n        updateTypedWord(\"\")\n      }\n    }\n    else if (isTestComplete){\n      runTest()\n    }\n  }\n\n// Start timing and scoring system\n  const count = () => {\n    setCountdown(countdown -= 1)\n  }\n// Clears the test timer by reference\n  const clearTimer = () => {\n    clearInterval(window.cdc)\n  }\n// Starts and stops test\n  const runTest = () => {\n    toggleTestRunning(true)\n    toggleTestComplete(false)\n    window.cdc = setInterval( () => { count() }, 1000) // Set reference\n    setTimeout(() => {\n      clearTimer()\n      toggleTestRunning(false)\n      checkHiscores()\n    }, duration*1000)\n\n  }\n\n// TODO: Points resetting at end of test?\n  const checkHiscores = () => {\n    if ( window.points > hiscores[9].score ) {\n      let position = 9\n      for (let i = 9; i >= 0; i--) {\n        if ( window.points > hiscores[i].score ) {\n          position = i\n        }\n      }\n      let newHiscores = hiscores\n      newHiscores.splice(position,0,{score: window.points})\n      console.log(newHiscores)\n      let hiscoresToReturn = newHiscores.slice(0,10)\n      console.log(hiscoresToReturn)\n      updateHiscores(hiscoresToReturn)\n    }\n  }\n\n// Reset test early/midway through\n  const resetTest = () => {\n    adjustAttempts(0)\n    getNewWords(testList())\n    setCountdown(duration)\n    clearTimer()\n    adjustPoints(0)\n    updateTypedWord(\"\")\n    toggleTestComplete(true)\n  }\n  useEffect(() => { // Reset on app loading\n    getNewWords(testList())\n    setCountdown(duration)\n  },[])\n\n// Calculate and return accuracy as long as it can be calculated\n  const getAccuracy = () => {\n    let accuracy = ((points/attempts)*100).toFixed(1)\n    if (isNaN(accuracy)) {\n      return 0\n    } else {\n      return accuracy\n    }\n  }\n\n// Render\n  return(\n    <TypingTestComponent\n      //Scoring props\n      words={words}\n      points={points}\n      attempts={attempts}\n      accuracy={getAccuracy()}\n      wpm={ (points*(60/(61-countdown))).toFixed(1) }\n      //Operational props\n      countdown={countdown}\n      typedWord={typedWord}\n      updateTypedWord={updateTypedWord}\n      checkWord={checkWord}\n      resetTest={resetTest}\n      />\n  )\n}\n\nexport { TypingTestContainer }\n","import React from \"react\"\n\nfunction LeaderboardComponent({ hiscores }) {\n  return(\n    <div className=\"leaderboard-container\">\n      <h2>Leaderboard</h2>\n      <div className=\"leaderboard-grid\">\n        <div>1. {hiscores[0].score}<span className=\"unit-text\">wpm</span></div>\n        <div>2. {hiscores[1].score}<span className=\"unit-text\">wpm</span></div>\n        <div>3. {hiscores[2].score}<span className=\"unit-text\">wpm</span></div>\n        <div>4. {hiscores[3].score}<span className=\"unit-text\">wpm</span></div>\n        <div>5. {hiscores[4].score}<span className=\"unit-text\">wpm</span></div>\n        <div>6. {hiscores[5].score}<span className=\"unit-text\">wpm</span></div>\n        <div>7. {hiscores[6].score}<span className=\"unit-text\">wpm</span></div>\n        <div>8. {hiscores[7].score}<span className=\"unit-text\">wpm</span></div>\n        <div>9. {hiscores[8].score}<span className=\"unit-text\">wpm</span></div>\n        <div>10. {hiscores[9].score}<span className=\"unit-text\">wpm</span></div>\n      </div>\n    </div>\n  )\n}\n\nexport default LeaderboardComponent\n","import React from \"react\"\nimport LeaderboardComponent from \"./LeaderboardComponent\"\nimport \"./TypingTestContainer\"\n\n// Todo: pass hiscores back?\n\nfunction LeaderboardContainer({ hiscores }) {\n  return (\n    <LeaderboardComponent\n      hiscores={hiscores} />\n  )\n}\n\nexport default LeaderboardContainer\n","import React, { useState, useEffect } from \"react\"\nimport { TypingTestContainer } from \"./TypingTestContainer\"\nimport LeaderboardContainer from \"./LeaderboardContainer\"\nimport \"./app.scss\"\n\n\nfunction App() {\n\n  let localStorageHiscores = JSON.parse(window.localStorage.getItem(\"trickyTyperHiscores\"))\n  let initialHiscores = [\n    {score:0},\n    {score:0},\n    {score:0},\n    {score:0},\n    {score:0},\n    {score:0},\n    {score:0},\n    {score:0},\n    {score:0},\n    {score:0}\n  ]\n  if (localStorageHiscores) {\n    initialHiscores = localStorageHiscores\n  }\n  const [hiscores, updateHiscores] = useState(initialHiscores)\n  useEffect(() => {\n    window.localStorage.setItem(\"trickyTyperHiscores\", JSON.stringify(hiscores))\n  },[hiscores])\n\n    return (\n      <div className={\"page-container\"}>\n        <h1>TrickyTyper</h1>\n        <TypingTestContainer\n          hiscores={hiscores}\n          updateHiscores={updateHiscores}/>\n        <LeaderboardContainer\n          hiscores={hiscores}/>\n      </div>\n    )\n}\n\nexport default App\n","import React from \"react\"\nimport ReactDOM from \"react-dom\"\n\nimport App from \"./App\"\n\nReactDOM.render(\n  <App />,\n  document.getElementById(\"root\")\n)\n"],"sourceRoot":""}